FROM ruby:2.7.1-alpine3.12

RUN apk update && apk add --update --no-cache --virtual build-dependency build-base ruby-dev postgresql nodejs npm git libpq-dev

# Set an environment variable where the Rails app is installed to inside of Docker image
ENV RAILS_ROOT /var/www/vote

# make a new directory where our project will be copied
RUN mkdir -p $RAILS_ROOT

# Set working directory within container
WORKDIR $RAILS_ROOT

# Setting env up
ARG RAILS_ENV
ENV RAILS_ENV=$RAILS_ENV
ENV RAKE_ENV=$RAILS_ENV
ENV RACK_ENV=$RAILS_ENV

# Adding gems
COPY Gemfile Gemfile
COPY Gemfile.lock Gemfile.lock

# RUN gem install pg

# development/production differs in bundle install
RUN if [[ "$RAILS_ENV" == "production" ]]; then bundle install --jobs 20 --retry 5 --without development test; else bundle install; fi

# Remove build dependencies and install runtime dependencies
RUN apk del build-dependency
RUN apk add --update postgresql-client postgresql-libs sqlite-libs nodejs yarn tzdata

# Adding project files
COPY . .

RUN bundle exec rake assets:precompile
# RUN bundle exec rake db:drop 
# RUN bundle exec rake db:create 
# RUN bundle exec rake db:migrate 
# RUN bundle exec rake db:seed

EXPOSE 3000

CMD ["bundle", "exec", "puma", "-C", "config/puma.rb"]